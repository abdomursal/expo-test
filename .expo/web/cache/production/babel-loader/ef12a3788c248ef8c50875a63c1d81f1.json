{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import{FlatList}from\"react-native-gesture-handler\";import Card from\"../components/Card\";import CategorySlider from\"../components/CategorySlider\";import Header from\"../components/Header\";import SearchBox from\"../components/SearchBox\";import{Categories}from\"../constants/Categories\";import{Colors}from\"../constants/Colors\";import{data}from\"../lib/data\";import{viewportWidth}from\"../utils/ScaleDimensions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(_ref){var navigation=_ref.navigation,route=_ref.route;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),categorySelected=_useState2[0],setCategorySelected=_useState2[1];var filter=data.filter(function(item){return item.category==categorySelected;});var products=filter.length<=0?data:filter;return _jsxs(SafeAreaView,{style:style.container,children:[_jsx(StatusBar,{}),_jsx(Header,{navigation:navigation,route:route}),_jsxs(View,{style:style.heroWrap,children:[_jsx(Text,{style:style.title,children:\"Delicious\"}),_jsx(Text,{style:style.title,children:\"food for you\"})]}),_jsx(SearchBox,{}),_jsx(View,{style:style.categoryWrap,children:_jsx(FlatList,{data:Categories,horizontal:true,showsHorizontalScrollIndicator:true,renderItem:function renderItem(_ref2){var item=_ref2.item;return _jsx(CategorySlider,{data:item,onPress:function onPress(){return setCategorySelected(item.label);},selected:categorySelected});},contentContainerStyle:style.paddingLeft})}),_jsx(View,{style:style.cardWrap,children:_jsx(FlatList,{data:products,horizontal:true,showsHorizontalScrollIndicator:false,renderItem:function renderItem(_ref3){var item=_ref3.item;return _jsx(Card,{data:item});},contentContainerStyle:[style.scrollViewContentStyle,style.paddingLeft]})})]});};var style=StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"red\",paddingVertical:20},title:{fontSize:34,fontWeight:\"bold\",color:Colors.black,lineHeight:40.57},heroWrap:{height:\"15%\",width:viewportWidth/1.2},paddingLeft:{paddingLeft:70},categoryWrap:{height:\"8%\",marginBottom:10},scrollViewContentStyle:{alignItems:\"center\",justifyContent:\"center\"},cardWrap:{width:\"100%\",height:\"55%\"}});export default Home;","map":{"version":3,"sources":["/Users/abdo/Documents/ticketbro_challenge/src/screens/Home.tsx"],"names":["React","useState","FlatList","Card","CategorySlider","Header","SearchBox","Categories","Colors","data","viewportWidth","Home","navigation","route","categorySelected","setCategorySelected","filter","item","category","products","length","style","container","heroWrap","title","categoryWrap","label","paddingLeft","cardWrap","scrollViewContentStyle","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","paddingVertical","fontSize","fontWeight","color","black","lineHeight","height","width","marginBottom"],"mappings":"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","sourcesContent":["import { DrawerScreenProps } from \"@react-navigation/drawer\";\nimport React, { useState } from \"react\";\nimport { View, Text, StyleSheet, SafeAreaView, StatusBar } from \"react-native\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Card from \"../components/Card\";\nimport CategorySlider from \"../components/CategorySlider\";\nimport Header from \"../components/Header\";\nimport SearchBox from \"../components/SearchBox\";\nimport { Categories } from \"../constants/Categories\";\nimport { Colors } from \"../constants/Colors\";\nimport { data } from \"../lib/data\";\nimport { DrawerParamList } from \"../types/NavigationProps\";\nimport { viewportWidth } from \"../utils/ScaleDimensions\";\n\nconst Home = ({\n  navigation,\n  route,\n}: DrawerScreenProps<DrawerParamList, any>) => {\n  const [categorySelected, setCategorySelected] = useState(\"\");\n  const filter = data.filter((item) => item.category == categorySelected);\n  const products = filter.length <= 0 ? data : filter;\n\n  return (\n    <SafeAreaView style={style.container}>\n      <StatusBar />\n      <Header navigation={navigation} route={route} />\n      <View style={style.heroWrap}>\n        <Text style={style.title}>Delicious</Text>\n        <Text style={style.title}>food for you</Text>\n      </View>\n      <SearchBox />\n      <View style={style.categoryWrap}>\n        <FlatList\n          data={Categories}\n          // keyExtractor={(item}) =>item.id}\n          horizontal\n          showsHorizontalScrollIndicator={true}\n          renderItem={({ item }) => (\n            <CategorySlider\n              data={item}\n              onPress={() => setCategorySelected(item.label)}\n              selected={categorySelected}\n            />\n          )}\n          contentContainerStyle={style.paddingLeft}\n        />\n      </View>\n      <View style={style.cardWrap}>\n        <FlatList\n          data={products}\n          // keyExtractor={(item) => item.id}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          renderItem={({ item }) => <Card data={item} />}\n          contentContainerStyle={[\n            style.scrollViewContentStyle,\n            style.paddingLeft,\n          ]}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"red\",\n    paddingVertical: 20,\n  },\n  title: {\n    fontSize: 34,\n    fontWeight: \"bold\",\n    color: Colors.black,\n    lineHeight: 40.57,\n  },\n  heroWrap: {\n    height: \"15%\",\n    width: viewportWidth / 1.2,\n  },\n  paddingLeft: {\n    paddingLeft: 70,\n  },\n  categoryWrap: {\n    height: \"8%\",\n    marginBottom: 10,\n  },\n  scrollViewContentStyle: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  cardWrap: {\n    width: \"100%\",\n    height: \"55%\",\n  },\n});\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}