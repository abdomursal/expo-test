{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Card from \"../components/Card\";\nimport CategorySlider from \"../components/CategorySlider\";\nimport Header from \"../components/Header\";\nimport SearchBox from \"../components/SearchBox\";\nimport { Categories } from \"../constants/Categories\";\nimport { Colors } from \"../constants/Colors\";\nimport { data } from \"../lib/data\";\nimport { viewportWidth } from \"../utils/ScaleDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      categorySelected = _useState2[0],\n      setCategorySelected = _useState2[1];\n\n  var filter = data.filter(function (item) {\n    return item.category == categorySelected;\n  });\n  var products = filter.length <= 0 ? data : filter;\n  return _jsxs(SafeAreaView, {\n    style: style.container,\n    children: [_jsx(StatusBar, {}), _jsx(Header, {\n      navigation: navigation,\n      route: route\n    }), _jsxs(View, {\n      style: style.heroWrap,\n      children: [_jsx(Text, {\n        style: style.title,\n        children: \"Delicious\"\n      }), _jsx(Text, {\n        style: style.title,\n        children: \"food for you\"\n      })]\n    }), _jsx(SearchBox, {}), _jsx(View, {\n      style: style.categoryWrap,\n      children: _jsx(FlatList, {\n        data: Categories,\n        horizontal: true,\n        showsHorizontalScrollIndicator: true,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(CategorySlider, {\n            data: item,\n            onPress: function onPress() {\n              return setCategorySelected(item.label);\n            },\n            selected: categorySelected\n          });\n        },\n        contentContainerStyle: style.paddingLeft\n      })\n    }), _jsx(View, {\n      style: style.cardWrap,\n      children: _jsx(FlatList, {\n        data: products,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(Card, {\n            data: item\n          });\n        },\n        contentContainerStyle: [style.scrollViewContentStyle, style.paddingLeft]\n      })\n    })]\n  });\n};\n\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary,\n    paddingVertical: 20\n  },\n  title: {\n    fontSize: 34,\n    fontWeight: \"bold\",\n    color: Colors.black,\n    lineHeight: 40.57\n  },\n  heroWrap: {\n    height: \"15%\",\n    width: viewportWidth / 1.2\n  },\n  paddingLeft: {\n    paddingLeft: 70\n  },\n  categoryWrap: {\n    height: \"8%\",\n    marginBottom: 10\n  },\n  scrollViewContentStyle: {\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  cardWrap: {\n    width: \"100%\",\n    height: '55%'\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/Users/abdo/Documents/ticketbro_challenge/src/screens/Home.tsx"],"names":["React","useState","FlatList","Card","CategorySlider","Header","SearchBox","Categories","Colors","data","viewportWidth","Home","navigation","route","categorySelected","setCategorySelected","filter","item","category","products","length","style","container","heroWrap","title","categoryWrap","label","paddingLeft","cardWrap","scrollViewContentStyle","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","primary","paddingVertical","fontSize","fontWeight","color","black","lineHeight","height","width","marginBottom"],"mappings":"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","sourcesContent":["import { DrawerScreenProps } from \"@react-navigation/drawer\";\nimport React, {useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  StatusBar,\n} from \"react-native\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Card from \"../components/Card\";\nimport CategorySlider from \"../components/CategorySlider\";\nimport Header from \"../components/Header\";\nimport SearchBox from \"../components/SearchBox\";\nimport { Categories } from \"../constants/Categories\";\nimport { Colors } from \"../constants/Colors\";\nimport { data } from \"../lib/data\";\nimport { DrawerParamList } from \"../types/NavigationProps\";\nimport { viewportWidth } from \"../utils/ScaleDimensions\";\n\n\nconst Home = ({ navigation,route }: DrawerScreenProps<DrawerParamList, any>) => {\n  const [categorySelected, setCategorySelected] = useState('');\n  const filter = data.filter((item)=> item.category == categorySelected)\n  const products = filter.length <= 0? data : filter\n\n\n  return (\n    <SafeAreaView style={style.container}>\n      <StatusBar />\n      <Header navigation={navigation} route={route} />\n      <View style={style.heroWrap}>\n        <Text style={style.title}>Delicious</Text>\n        <Text style={style.title}>food for you</Text>\n      </View>\n      <SearchBox />\n      <View style={style.categoryWrap}>\n        <FlatList\n          data={Categories}\n          // keyExtractor={(item}) =>item.id}\n          horizontal\n          showsHorizontalScrollIndicator={true}\n          renderItem={({ item }) => <CategorySlider data={item} onPress={()=>setCategorySelected(item.label)}  selected={categorySelected}/>}\n          contentContainerStyle={style.paddingLeft}\n        />\n      </View>\n      <View style={style.cardWrap}>\n        <FlatList\n          data={products}\n          // keyExtractor={(item) => item.id}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          renderItem={({ item }) => <Card data={item} />}\n          contentContainerStyle={[style.scrollViewContentStyle, style.paddingLeft]}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\n\nconst style = StyleSheet.create({\n  container: {\n    flex:1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary,\n    paddingVertical: 20,\n  },\n  title: {\n    fontSize: 34,\n    fontWeight: \"bold\",\n    color: Colors.black,\n    lineHeight: 40.57,\n  },\n  heroWrap: {\n    height: \"15%\",\n    width: viewportWidth / 1.2,\n  },\n  paddingLeft: {\n    paddingLeft: 70,\n  },\n  categoryWrap: {\n    height: \"8%\",\n    marginBottom: 10,\n  },\n  scrollViewContentStyle: {\n    alignItems: \"center\",\n    justifyContent:'center'\n  },\n  cardWrap: {\n    width: \"100%\",\n    height: '55%',\n  }\n});\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}